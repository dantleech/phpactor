*phpactor.txt*
                                                         *Phpactor* *phpactor*

==============================================================================
CONTENTS                                                   *phpactor-contents*
  1. Introduction.............................................|phpactor-intro|
  2. Configuration...........................................|phpactor-config|
  3. Commands..............................................|phpactor-commands|
  4. Functions............................................|phpactor-functions|

==============================================================================
INTRODUCTION                                                  *phpactor-intro*


Phpactor is a auto-completion, refactoring and code-navigation tool for PHP.

==============================================================================
CONFIGURATION                                                *phpactor-config*

                                                            *g:phpactorPhpBin*
Path to the PHP binary used by Phpactor

                                                            *g:phpactorBranch*
The Phpactor branch to use when calling |:PhpactorUpdate|

                                               *g:phpactorOmniAutoClassImport*
Automatically import classes when using VIM native omni-completion

                                              *g:phpactorCompletionIgnoreCase*
Ignore case when suggestion completion results

                                                  *g:phpactorQuickfixStrategy*
Function to use when populating a list of code references. The default is to
use the VIM quick-fix list.

                                                 *g:phpactorInputListStrategy*
Function to use when presenting a user with a choice of options. The default
is to use the VIM inputlist.

==============================================================================
COMMANDS                                                   *phpactor-commands*

:PhpactorUpdate                                              *:PhpactorUpdate*
  Update Phpactor to the latest version using the branch defined with
  g:phpactorBranch

:PhpactorCacheClear                                      *:PhpactorCacheClear*
  Clear the entire cache - this will take effect for all projects.

:PhpactorStatus                                              *:PhpactorStatus*
  Show some information about Phpactor's status

:PhpactorConfig                                              *:PhpactorConfig*
  Dump Phpactor's configuration

:[range]PhpactorExtractMethod                         *:PhpactorExtractMethod*
  Extract a new method from the current selection

:[range]PhpactorExtractExpression                 *:PhpactorExtractExpression*
  Extract the selected expression and assign it to a variable before (placing
  it before the current statement)

:PhpactorExtractConstant                            *:PhpactorExtractConstant*
  Extract a constant from a literal

:PhpactorClassExpand                                    *:PhpactorClassExpand*
  Expand the class name under the cursor to it's fully-qualified-name

:PhpactorImportClass                                    *:PhpactorImportClass*
  Import the name under the cusor. If multiple options are available, you are
  able to choose one.

:PhpactorImportMissingClasses                  *:PhpactorImportMissingClasses*
  Attempt to import all non-resolvable classes in the current class (based on
  offset position)

:PhpactorGotoDefinition                              *:PhpactorGotoDefinition*
  Goto the definition of the class, method or function under the cursor. Open
  the definition in the current window.

:PhpactorGotoDefinitionVsplit                  *:PhpactorGotoDefinitionVsplit*
  As with |:PhpactorGotoDefinition| but open in a vertical split.

:PhpactorGotoDefinitionHsplit                  *:PhpactorGotoDefinitionHsplit*
  As with |:PhpactorGotoDefinition| but open in a horizontal split.

:PhpactorGotoDefinitionTab                        *:PhpactorGotoDefinitionTab*
  As with |:PhpactorGotoDefinition| but open in a new tab

:PhpactorGotoImplementations                    *:PhpactorGotoImplementations*
  Load all implementations of the class under the cursor into the quick-fix
  list.

:PhpactorHover                                                *:PhpactorHover*
  Show information about the symbol under the cursor.

:PhpactorContextMenu                                    *:PhpactorContextMenu*
  Show the context menu for the current cursor position.

:PhpactorCopyFile                                          *:PhpactorCopyFile*
  Copy the current file - updating the namespace and class name according to
  the new file location and name

:PhpactorMoveFile                                          *:PhpactorMoveFile*
  Move the current file - updating the namespace and class name according to
  the new file location and name

:PhpactorExtensionList                                *:PhpactorExtensionList*
  List all installed extensions

:PhpactorExtensionInstall                          *:PhpactorExtensionInstall*
  Install an extension

:PhpactorExtensionRemove                            *:PhpactorExtensionRemove*
  Remove an extension

:PhpactorClassNew                                          *:PhpactorClassNew*
  Create a new class. You will be offered a choice of templates.

:PhpactorClassInflect                                  *:PhpactorClassInflect*
  Inflect a new class from the current class (e.g. generate an interface for
  the current class)

:PhpactorFindReferences                              *:PhpactorFindReferences*
  Attempt to find all references to the class name or method under the cursor.
  The results will be loaded into the quik-fix list

:PhpactorNavigate                                          *:PhpactorNavigate*
  Navigate - jump to the parent class, interface, or any of the relationships
  defined in `navigation.destinations`
  https://phpactor.github.io/phpactor/configuration.html#reference

:PhpactorChangeVisibility                          *:PhpactorChangeVisibility*
  Rotate the visiblity of the method under the cursor

:PhpactorGenerateAccessors                        *:PhpactorGenerateAccessors*
  Generate accessors for the current class

==============================================================================
FUNCTIONS                                                 *phpactor-functions*

phpactor#Complete({findstart}, {base})                   *phpactor#Complete()*
  """""""""""""""""""""" Autocomplete """""""""""""""""""""""

phpactor#UseAdd()                                          *phpactor#UseAdd()*
  """""""""""""""""""""" Insert a use statement """""""""""""""""""""""

phpactor#_GotoDefinitionTarget({target})    *phpactor#_GotoDefinitionTarget()*
  """"""""""""""""""""""""" RPC Proxy methods """"""""""""""""""""""""""

phpactor#_switchToBufferOrEdit({filePath})  *phpactor#_switchToBufferOrEdit()*
  """"""""""""""""""""" Utility functions """""""""""""""""""""" Return v:true
  if we changed file, v:false otherwise


vim:tw=78:ts=8:ft=help:norl:
